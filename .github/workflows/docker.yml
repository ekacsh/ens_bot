name: Build and Push Docker image
on:
  push:
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
        include:
          - target: x86_64-unknown-linux-gnu
            arch: amd64
          - target: aarch64-unknown-linux-gnu
            arch: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build with cross
        run: cross build --target ${{ matrix.target }} --release

      - name: Prepare binary
        run: |
          mkdir -p ./docker-bin
          cp target/${{ matrix.target }}/release/ens_bot ./docker-bin/ens_bot-${{ matrix.arch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/${{ matrix.arch }}
          tags: ghcr.io/${{ github.repository_owner }}/ens_bot:${{ matrix.arch }}-${{ github.sha }}
          build-args: |
            BIN=ens_bot-${{ matrix.arch }}

  manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Create and push multi-arch manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository_owner }}/ens_bot:latest \
            --amend ghcr.io/${{ github.repository_owner }}/ens_bot:amd64-${{ github.sha }} \
            --amend ghcr.io/${{ github.repository_owner }}/ens_bot:arm64-${{ github.sha }}
          docker manifest push ghcr.io/${{ github.repository_owner }}/ens_bot:latest